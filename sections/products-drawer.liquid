{%- style -%}
  .twcss-animate-slide-in {
    animation: slideIn 300ms ease-out forwards;
  }

  .twcss-animate-slide-out {
    animation: slideOut 300ms ease-in forwards;
  }

  @keyframes slideIn {
    from {
      transform: translateX(-100%);
    }
    to {
      transform: translateX(0);
    }
  }

  @keyframes slideOut {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-100%);
    }
  }
{%- endstyle -%}

<products-drawer>
  <div
    id='products-drawer'
    class='twcss-fixed twcss-inset-0 twcss-z-50 twcss-overflow-hidden'
    aria-labelledby='slide-over-title'
    role='dialog'
    aria-modal='true'
    style='display: none;'
  >
    <div
      class='products-drawer-overlay twcss-absolute twcss-inset-0 twcss-bg-black/50 twcss-transition-opacity !twcss-block'
      aria-hidden='true'
    ></div>

    <div class='twcss-absolute twcss-inset-0 twcss-overflow-hidden twcss-pointer-events-none'>
      <div class='twcss-pointer-events-none twcss-fixed twcss-inset-y-0 twcss-left-0 twcss-flex twcss-max-w-full'>
        <div class='twcss-pointer-events-auto twcss-w-screen twcss-max-w-md'>
          <div class='twcss-flex twcss-h-full twcss-flex-col twcss-overflow-y-scroll twcss-bg-white'>
            <!-- Header -->
            <div class='twcss-flex twcss-items-center twcss-justify-between twcss-px-6 twcss-py-4'>
              <div class='twcss-flex twcss-items-center'>
                {%- if section.settings.drawer_logo != blank -%}
                  <div class='twcss-h-8'>
                    {%- assign logo_alt = section.settings.drawer_logo.alt | default: shop.name | escape -%}
                    {{
                      section.settings.drawer_logo
                      | image_url: width: section.settings.drawer_logo_width
                      | image_tag: class: 'twcss-h-full twcss-w-auto', alt: logo_alt
                    }}
                  </div>
                {%- else -%}
                  <span class='twcss-text-lg twcss-font-medium'>{{ shop.name }}</span>
                {%- endif -%}
              </div>
              <button type='button' class='products-drawer-close twcss-text-accent-default hover:twcss-text-gray-500'>
                <span class='twcss-sr-only'>Close panel</span>
                <span class='twcss-text-secondary-middle twcss-size-6'>
                  {{- 'icon-close.svg' | inline_asset_content -}}
                </span>
              </button>
            </div>

            <!-- Categories -->
            <div class='twcss-flex-1 twcss-overflow-y-auto'>
              {%- for block in section.blocks -%}
                <div class='twcss-py-4 {% unless forloop.first %}twcss-border-t twcss-border-gray-200{% endunless %}'>
                  <h3 class='twcss-px-6 twcss-text-lg twcss-font-semibold twcss-text-primary-default'>
                    {{ block.settings.category_title }}
                  </h3>
                  <div class='twcss-mt-2'>
                    {%- for link in block.settings.menu.links -%}
                      <a href='{{ link.url }}' class='twcss-block twcss-px-6 twcss-py-3 hover:twcss-bg-gray-50'>
                        <div class='twcss-flex twcss-items-center twcss-justify-between hover:twcss-underline hover:twcss-decoration-[#8B4513]'>
                          <span class='twcss-text-accent-default'>{{ link.title }}</span>
                          <span class='twcss-text-secondary-middle twcss-rotate-90 twcss-size-4'>
                            {{ 'icon-caret.svg' | inline_asset_content }}
                          </span>
                        </div>
                      </a>
                    {%- endfor -%}
                  </div>
                </div>
              {%- endfor -%}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</products-drawer>

<script>
  class ProductsDrawer extends HTMLElement {
    constructor() {
      super();
      this.drawer = this.querySelector('#products-drawer');
      this.closeButtons = this.querySelectorAll('.products-drawer-close');
      this.overlay = this.querySelector('.products-drawer-overlay');
      window.addEventListener('DOMContentLoaded', () => this.bindEvents());
    }

    bindEvents() {
      const trigger = document.getElementById('products-drawer-trigger');

      if (trigger) {
        trigger.addEventListener('click', () => this.open());
      }

      // Close button events
      this.closeButtons.forEach((button) => {
        button.addEventListener('click', () => this.close());
      });

      // Close when clicking overlay
      this.drawer.addEventListener('click', (e) => {
        // Close drawer if clicking on drawer background or overlay
        if (e.target === this.drawer || e.target === this.overlay) {
          this.close();
        }
      });

      // Close on ESC key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.drawer.style.display === 'block') {
          this.close();
        }
      });
    }

    open() {
      this.drawer.style.display = 'block';
      document.body.style.overflow = 'hidden';

      requestAnimationFrame(() => {
        const drawer = this.drawer.querySelector('.twcss-max-w-md');
        drawer.classList.add('twcss-animate-slide-in');
      });
    }

    close() {
      const drawer = this.drawer.querySelector('.twcss-max-w-md');
      drawer.classList.add('twcss-animate-slide-out');

      setTimeout(() => {
        this.drawer.style.display = 'none';
        document.body.style.overflow = '';
        drawer.classList.remove('twcss-animate-slide-out', 'twcss-animate-slide-in');
      }, 300);
    }
  }

  // Initialize custom element after DOM is fully loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      customElements.define('products-drawer', ProductsDrawer);
    });
  } else {
    customElements.define('products-drawer', ProductsDrawer);
  }
</script>

{% schema %}
{
  "name": "Products Drawer",
  "settings": [
    {
      "type": "image_picker",
      "id": "drawer_logo",
      "label": "Drawer Logo"
    },
    {
      "type": "range",
      "id": "drawer_logo_width",
      "min": 50,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Logo Width",
      "default": 100
    },
    {
      "type": "text",
      "id": "drawer_title",
      "label": "Drawer Title",
      "default": "Products Menu"
    }
  ],
  "blocks": [
    {
      "type": "category",
      "name": "Category",
      "settings": [
        {
          "type": "text",
          "id": "category_title",
          "label": "Category Title",
          "default": "Category"
        },
        {
          "type": "link_list",
          "id": "menu",
          "label": "Menu",
          "info": "Select a menu for this category"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Products Drawer",
      "blocks": [
        {
          "type": "category"
        }
      ]
    }
  ]
}
{% endschema %}
