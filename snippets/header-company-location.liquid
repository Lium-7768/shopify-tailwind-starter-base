<div class='twcss-relative'>
  <button class='twcss-flex twcss-items-center twcss-gap-x-2'>
    <span class='twcss-font-semibol twcss-hidden lg:twcss-flex'>
      {{ customer.current_location.name }}
    </span>
    {% if customer.company_available_locations.size > 1 %}
      <span
        class='twcss-w-4 twcss-transition-transform twcss-duration-200 twcss-rotate-180 twcss-hidden lg:twcss-flex'
        data-location-icon
      >
        {{ 'icon-caret.svg' | inline_asset_content }}
      </span>
    {% endif %}
  </button>

  {% if customer.company_available_locations.size > 1 %}
    <div
      class='twcss-absolute twcss-right-0 twcss-mt-2 twcss-w-[400px] twcss-bg-white twcss-rounded-lg twcss-shadow-lg twcss-hidden'
      data-location-dropdown
    >
      <div class='twcss-p-6 twcss-text-base twcss-space-y-4'>
        <div class='twcss-font-medium twcss-text-gray-700'>Choose your location</div>

        <div class='location-switcher twcss-space-y-2' data-url='{{ routes.location_set_current_url }}'>
          {% for location in customer.company_available_locations %}
            {% unless location.current? %}
              <div class='twcss-flex twcss-items-center twcss-p-3 twcss-rounded-lg hover:twcss-bg-blue-50'>
                <input
                  type='radio'
                  id='location-{{ location.id }}'
                  name='location'
                  value='{{ location.id }}'
                  class='twcss-w-4 twcss-h-4 twcss-border twcss-border-gray-300 twcss-rounded-full twcss-text-blue-600 focus:twcss-ring-blue-500'
                  data-location-id='{{ location.id }}'
                  {% if location.current? %}
                    checked
                  {% endif %}
                >
                <label
                  for='location-{{ location.id }}'
                  class='twcss-ml-3 twcss-block twcss-text-sm twcss-font-medium twcss-text-gray-700'
                >
                  {{ location.name }}
                </label>
                <span class='loading-indicator twcss-hidden twcss-ml-2 twcss-text-primary-default'> Switching... </span>
              </div>
            {% endunless %}
          {% endfor %}

          <div class='error-message twcss-hidden twcss-text-red-500 twcss-mt-2'></div>
        </div>

        <div class='twcss-flex twcss-gap-4 twcss-mt-6'>
          <button
            class='twcss-flex-1 twcss-py-3 twcss-px-4 twcss-border twcss-border-gray-300 twcss-rounded-lg twcss-text-gray-700'
            data-action='cancel'
          >
            Cancel
          </button>
          <button
            class='twcss-flex-1 twcss-py-3 twcss-px-4 twcss-bg-orange-500 twcss-text-white twcss-rounded-lg'
            data-action='confirm'
          >
            Confirm
          </button>
        </div>
      </div>
    </div>

    <script>
      (function () {
        const locationButton = document.querySelector('[data-location-icon]').parentElement;
        const locationDropdown = document.querySelector('[data-location-dropdown]');
        const locationIcon = document.querySelector('[data-location-icon]');

        if (locationButton && locationDropdown) {
          locationButton.addEventListener('click', () => {
            locationDropdown.classList.toggle('twcss-hidden');
            locationIcon.style.transform = locationDropdown.classList.contains('twcss-hidden')
              ? 'rotate(180deg)'
              : 'rotate(0deg)';
          });

          // Close dropdown when clicking outside
          document.addEventListener('click', (event) => {
            if (!locationButton.contains(event.target) && !locationDropdown.contains(event.target)) {
              locationDropdown.classList.add('twcss-hidden');
              locationIcon.style.transform = 'rotate(180deg)';
            }
          });
        }

        // Location switching functionality
        document.querySelectorAll('.location-btn').forEach((button) => {
          button.addEventListener('click', async function () {
            const locationId = this.dataset.locationId;
            const url = this.closest('.location-switcher').dataset.url;
            const loadingIndicator = this.querySelector('.loading-indicator');
            const errorMessage = this.closest('.location-switcher').querySelector('.error-message');

            try {
              loadingIndicator.classList.remove('twcss-hidden');
              button.disabled = true;
              errorMessage.classList.add('twcss-hidden');

              const response = await fetch(url, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
                },
                body: JSON.stringify({
                  location_id: locationId,
                }),
              });

              if (response.ok) {
                window.location.reload();
              } else {
                throw new Error('Failed to switch location');
              }
            } catch (error) {
              errorMessage.textContent = 'Failed to switch location. Please try again.';
              errorMessage.classList.remove('twcss-hidden');
              loadingIndicator.classList.add('twcss-hidden');
              button.disabled = false;
            }
          });
        });
      })();
    </script>
  {% endif %}
</div>
