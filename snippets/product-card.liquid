{% comment %}
  参数说明:
  - product: 产品对象
  - show_vendor: 是否显示供应商 (可选)
  - class: 额外的 CSS 类 (可选)
  - show_new_tag: 是否显示新品标签 (可选)
{% endcomment %}
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if settings.cart_type == 'drawer' -%}
  {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
  {{ 'component-cart.css' | asset_url | stylesheet_tag }}
  {{ 'component-totals.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-discounts.css' | asset_url | stylesheet_tag }}
  {{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- if settings.cart_type == 'drawer' -%}
  <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

<div class="{{ class | default: '' }} twcss-bg-white twcss-rounded-lg twcss-shadow-md twcss-w-full hover:twcss-shadow-lg twcss-transition-shadow twcss-duration-200 twcss-flex twcss-flex-col">
  <!-- 产品图片区域 -->
  <div class="twcss-h-60 twcss-w-full twcss-shadow-sm">
    <a href="{{ product.url }}" class="twcss-block twcss-w-full twcss-h-full">
      <img
        src="{{ product.featured_image | img_url: '240x240', crop: 'center' }}"
        alt="{{ product.title }}"
        class="twcss-object-contain twcss-w-full twcss-h-full"
        loading="lazy"
        width="240"
        height="240"
      >
    </a>
  </div>

  <!-- 产品信息区域 -->
  <div
    class="
          twcss-flex twcss-flex-col twcss-bg-[#f8f8f8]
      twcss-p-4
    "
  >
    <div class="twcss-flex twcss-flex-col twcss-flex-1 twcss-space-y-1">
      <div class="twcss-flex twcss-justify-between twcss-flex-col twcss-space-y-1">
        <div class="twcss-text-gray-600 twcss-text-sm">
          {{ product.vendor }}
        </div>

        <a
          href="{{ product.url }}"
          class="
            twcss-text-xl twcss-font-bold
            twcss-line-clamp-2
            twcss-text-[#353535]
            twcss-h-14 twcss-overflow-hidden twcss-text-ellipsis
          "
        >
          {{ product.title }}
        </a>
      </div>

      {% if show_new_tag %}
        <div
          class="twcss-ml-2 twcss-w-fit twcss-bg-blue-500 twcss-text-white twcss-px-2 twcss-py-0.5 twcss-text-xs twcss-rounded-lg twcss-mb-2"
          style="opacity: {%- if product.metafields.custom.is_new -%}1{%- else -%}0{%- endif -%}"
        >
          New
        </div>
      {% endif %}

      <div class="twcss-space-y-1 twcss-text-sm">
        <p class="twcss-text-gray-600">Customer Product # {{ product.id }}</p>
        <p class="twcss-text-gray-600">
          Supplier Product # {{ product.metafields.custom.supplier_id | default: 'R9013DS' }}
        </p>
        <p class="twcss-text-gray-600">Supplier: {{ product.vendor }}</p>
      </div>
    </div>

    <div>
      {%- if product != blank -%}
        <product-form class="product-form">
          {%- form 'product',
            product,
            id: product_form_id,
            class: 'form',
            novalidate: 'novalidate',
            data-type: 'add-to-cart-form'
          -%}
            <!-- 产品变体ID输入 -->
            <input
              type="hidden"
              name="id"
              value="{{ product.selected_or_first_available_variant.id }}"
              {% if product.selected_or_first_available_variant.available == false %}
                disabled
              {% endif %}
              class="product-variant-id"
            >

            <!-- 添加到购物车按钮 -->
            <div class="product-form__buttons">
              <button
                type="submit"
                name="addtocart"
                class="product-form__submit button button--full-width button--primary"
                {% if product.selected_or_first_available_variant.available == false %}
                  disabled
                {% endif %}
              >
                <span>
                  {%- if product.selected_or_first_available_variant.available == false -%}
                    {{ 'products.product.sold_out' | t }}
                  {%- else -%}
                    {{ 'products.product.add_to_cart' | t }}
                  {%- endif -%}
                </span>
                {%- render 'loading-spinner' -%}
              </button>
            </div>
          {%- endform -%}
        </product-form>
      {%- endif -%}
    </div>

    <div
      class="
        twcss-flex twcss-items-center twcss-justify-center
        twcss-relative twcss-w-full
        twcss-mt-4
      "
    >
      <product-form class="twcss-flex-1">
        <div class="product-form__error-message-wrapper" role="alert" hidden>
          <span class="product-form__error-message"></span>
        </div>

        <form
          method="post"
          action="/cart/add"
          id="product-form-{{ product.id }}"
          accept-charset="UTF-8"
          class="twcss-flex-1"
          enctype="multipart/form-data"
          novalidate="novalidate"
          data-type="add-to-cart-form"
          {% comment %} data-ajax-cart-form {% endcomment %}
        >
          <input type="hidden" name="form_type" value="product">
          <input type="hidden" name="utf8" value="✓">
          <input type="hidden" name="id" value="{{ product.variants.first.id }}">
          <input type="hidden" name="quantity" value="1">

          <button
            type="submit"
            name="add"
            class="twcss-bg-orange-500 twcss-flex twcss-items-center twcss-justify-center hover:twcss-bg-orange-600 twcss-text-white twcss-px-4 twcss-py-2 twcss-rounded twcss-w-full twcss-font-bold twcss-relative"
            {% unless product.available %}
              disabled
            {% endunless %}
          >
            <span>
              {%- if product.available -%}
                Add to Cart
              {%- else -%}
                Sold out
              {%- endif -%}
            </span>
            {% render 'loading-spinner' %}
          </button>
        </form>
      </product-form>

      <div class="twcss-absolute twcss-right-0 twcss-top-0 twcss-w-10 twcss-h-full twcss-flex twcss-items-center twcss-justify-center twcss-border-l-[0.5px] twcss-border-white twcss-bg-orange-500 hover:twcss-bg-orange-600 twcss-text-white twcss-rounded-tr-lg twcss-rounded-br-lg">
        {% render 'icon-chevron-down' %}
      </div>
    </div>
  </div>
</div>

{% comment %}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      document.querySelectorAll('[data-ajax-cart-form]').forEach((form) => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();

          const formData = new FormData(form);

          fetch('/cart/add.js', {
            method: 'POST',
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              // 添加商品后，获取最新的购物车数据
              fetch('/cart.js')
                .then((res) => res.json())
                .then((cart) => {
                  // 更新购物车计数器
                  const cartCountBubble = document.querySelector('.cart-count-bubble');
                  const cartCount = document.querySelector('.cart-count-bubble span[aria-hidden="true"]');

                  if (cart.item_count > 0) {
                    if (!cartCountBubble) {
                      // 如果计数器不存在，创建新的计数器
                      const cartIcon = document.getElementById('cart-icon-bubble');
                      const newBubble = document.createElement('div');
                      newBubble.className = 'cart-count-bubble';
                      newBubble.innerHTML = `
                        <span aria-hidden="true">${cart.item_count}</span>
                        <span class="visually-hidden">${cart.item_count} items</span>
                      `;
                      cartIcon.appendChild(newBubble);
                    } else {
                      // 更新现有计数器
                      cartCount.textContent = cart.item_count;
                    }
                  }
                })
                .catch((error) => {
                  console.error('Error fetching cart:', error);
                });
            })
            .catch((error) => {
              console.error('Error adding to cart:', error);
            });
        });
      });
    });
  </script>
{% endcomment %}
